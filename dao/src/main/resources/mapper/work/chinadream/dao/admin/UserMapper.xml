<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="work.chinadream.dao.admin.UserMapper">

    <resultMap id="userVoResultMap" type="work.chinadream.entity.admin.UserVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="loginname" property="loginname" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="age" property="age" jdbcType="TINYINT"/>
        <result column="usertype" property="usertype" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="organization_id" property="organizationId" jdbcType="VARCHAR"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>

        <result column="organizationName" property="organizationName" jdbcType="VARCHAR"/>

        <collection property="rolesList" ofType="work.chinadream.entity.admin.Role">
            <id column="roleId" property="id"/>
            <result column="roleName" property="name"/>
        </collection>
    </resultMap>

    <select id="findUserPageCondition" resultMap="userVoResultMap" parameterType="work.chinadream.util.PageInfo">
        SELECT
        t.id,
        loginname,
        t.`name`,
        `password`,
        sex,
        age,
        usertype,
        t.`status`,
        organization_id,
        t.createdate,
        phone,
        s.`name` AS organizationName,
        s.seq AS seq,
        o.seq AS  roleSeq,
        o.id AS roleId,
        o.`name` AS roleName
        FROM
        user t
        LEFT JOIN user_role r ON t.id = r.user_id
        LEFT JOIN role o ON r.role_id = o.id
        LEFT JOIN organization s ON s.id = t.organization_id
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                t.name like '%${condition.name}%'
            </if>
            <if test=" condition.organizationIds != null ">
                t.organization_id in
                <foreach collection="condition.organizationIds" item="item" separator="," open="(" close=")">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="condition.startTime != null">
                <![CDATA[
                  and t.createdate >= #{condition.startTime}
                ]]>
            </if>
            <if test="condition.endTime != null">
                <![CDATA[
                  and t.createdate <= #{condition.endTime}
                ]]>
            </if>
        </where>
        group by id
        order by ${sort} ${order}
        LIMIT #{from}, #{size}
    </select>


    <select id="findUserPageCount" resultType="java.lang.Integer" parameterType="work.chinadream.util.PageInfo">
        select count(*) count
        from user t
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                t.name like '%${condition.name}%'
            </if>
            <if test=" condition.organizationIds != null ">
                t.organization_id in
                <foreach collection="condition.organizationIds" item="item" separator="," open="(" close=")">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="condition.startTime != null">
                <![CDATA[
                  and t.createdate >= #{condition.startTime}
                ]]>
            </if>
            <if test="condition.endTime != null">
                <![CDATA[
                  and t.createdate <= #{condition.endTime}
                ]]>
            </if>
        </where>
    </select>

    <select id="findUserVoById" resultMap="userVoResultMap" parameterType="java.lang.Long">
        SELECT
        t.id,
        loginname,
        t.`name`,
        `password`,
        sex,
        age,
        usertype,
        t.`status`,
        organization_id,
        t.createdate,
        phone,
        s.`name` AS organizationName,
        o.id AS roleId,
        o.`name` AS roleName
        FROM
        user t
        LEFT JOIN user_role r ON t.id = r.user_id
        LEFT JOIN role o ON r.role_id = o.id
        LEFT JOIN organization s ON s.id = t.organization_id
        <where>
            t.id = #{id}
        </where>
    </select>

    <update id="updateUserPwdById">
        update user
        set password = #{pwd,jdbcType=VARCHAR},
          createdate = now()
        where id = #{userId,jdbcType=BIGINT}
    </update>

</mapper>